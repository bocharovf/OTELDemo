version: "3"

services:

  # Демонстрационное приложение:
  otel-demo:
    build:
      context: ./
      dockerfile: ./OTELDemo/Dockerfile
    ports:
      - 80:80
    environment:
      - OTELDEMO_WEBAPI_URL=http://otel-demo-webapi
      - OTELDEMO_OTLP_ENPOINT=http://otel-collector:4317
  otel-demo-webapi:
    build:
      context: ./
      dockerfile: ./OTELDemo.WebAPI/Dockerfile
    environment:
      - OTELDEMO_OTLP_ENPOINT=http://otel-collector:4317
      - OTELDEMO_POSTGRES_CONSTR=Host=postgres;Port=5432;Database=postgres;Username=postgres;Password=postgres
    ports:
      - 8080:80
  postgres:
    image: postgres:14.1-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./configs/init.sql:/docker-entrypoint-initdb.d/create_tables.sql


  # Стек наблюдаемости:
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14250"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.66.0
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./configs/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - 8888:8888   # Prometheus metrics exposed by the collector
      - 8889:8889   # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317   # grpc
      - 4318:4318   # http
    depends_on:
      - jaeger
      - loki

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - 9090

  loki:
    image: grafana/loki:2.6.1
    user: root
    volumes:
      - ./configs/loki-local-config.yaml:/etc/loki/local-config.yaml
      - loki:/data/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana:latest
    ports:
        - "3000:3000"
    volumes:
        - grafana-storage:/var/lib/grafana

volumes:
  postgres:
  grafana-storage:
  prometheus_data:
  loki:


